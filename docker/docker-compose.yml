version: '3.8'

services:
  # Redis for distributed state
  redis:
    image: redis:7-alpine
    container_name: distributed-sync-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sync-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Node 1 - Initial Leader
  node1:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: sync-node1
    environment:
      - NODE_ID=node1
      - NODE_HOST=node1
      - NODE_PORT=8001
      - CLUSTER_NODES=node1:8001,node2:8002,node3:8003
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    ports:
      - "8001:8001"
      - "9091:9090"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - sync-network
    restart: unless-stopped

  # Node 2
  node2:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: sync-node2
    environment:
      - NODE_ID=node2
      - NODE_HOST=node2
      - NODE_PORT=8002
      - CLUSTER_NODES=node1:8001,node2:8002,node3:8003
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    ports:
      - "8002:8002"
      - "9092:9090"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - sync-network
    restart: unless-stopped

  # Node 3
  node3:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: sync-node3
    environment:
      - NODE_ID=node3
      - NODE_HOST=node3
      - NODE_PORT=8003
      - CLUSTER_NODES=node1:8001,node2:8002,node3:8003
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    ports:
      - "8003:8003"
      - "9093:9090"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - sync-network
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: sync-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - sync-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: sync-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - sync-network
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  sync-network:
    driver: bridge
